<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ZooKeeper和Dubbo的对比</title>
      <link href="/ZooKeeper%E5%92%8CDubbo%E7%9A%84%E5%AF%B9%E6%AF%94/"/>
      <url>/ZooKeeper%E5%92%8CDubbo%E7%9A%84%E5%AF%B9%E6%AF%94/</url>
      
        <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span>ZooKeeper是一个协调分发的软件<span class="token punctuation">,</span>Dubbo是一个微服务处理的框架<span class="token punctuation">.</span><span class="token punctuation">{</span>ZooKeeper的安装必须是建立在当前的CentOs中具有Java环境的<span class="token punctuation">.</span>    创建Data目录 <span class="token operator">-</span><span class="token operator">></span> 是在ZooKeeper的解压文件夹下创建的 <span class="token operator">-</span><span class="token operator">></span> 去修改conf文件夹下的zoo_simple<span class="token punctuation">.</span>cfg文件<span class="token punctuation">,</span>改名为zoo<span class="token punctuation">.</span>cfg <span class="token operator">-</span><span class="token operator">></span> vim zoo<span class="token punctuation">.</span>cfg修改里面的dataDir<span class="token punctuation">.</span>    进入到bin目录中使用 <span class="token punctuation">.</span>/zkServer<span class="token punctuation">.</span>sh start启动<span class="token punctuation">,</span> <span class="token punctuation">.</span>/zkServer<span class="token punctuation">.</span>sh status <span class="token operator">-</span><span class="token operator">></span> 启动成功的话 就显示 standalone<span class="token punctuation">,</span>如果启动不成功<span class="token punctuation">,</span>显示Probably not running<span class="token punctuation">,</span>如果你已经start<span class="token punctuation">,</span>但是显示可能未启动<span class="token punctuation">,</span>那么就去删除<span class="token punctuation">,</span>data目录下的一个叫XXX<span class="token punctuation">.</span>pid文件<span class="token punctuation">.</span><span class="token punctuation">}</span>默认端口号<span class="token operator">:</span><span class="token number">2181</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token punctuation">.</span>Dubbo<span class="token operator">-</span><span class="token operator">></span>首先解压tomcat<span class="token punctuation">,</span>然后将dubbo<span class="token operator">-</span>admin<span class="token punctuation">.</span>war放到tomcat的webapp文件夹下<span class="token punctuation">,</span>然后去bin文件夹下<span class="token punctuation">,</span> <span class="token punctuation">.</span>/startup<span class="token punctuation">.</span>sh查看tomcat控制台输出的命令 在tomcat的文件夹下 使用 tail <span class="token operator">-</span>f logs<span class="token operator">/</span>cataling<span class="token punctuation">.</span>out老师给你们的Linux它是<span class="token number">6.5</span><span class="token punctuation">,</span>而且是可视化界面<span class="token punctuation">,</span>而且据说还是<span class="token number">32</span>位的<span class="token punctuation">.</span>    自己去建一个CentOs7 <span class="token operator">-</span><span class="token operator">></span> systemctl stop firewall<span class="token punctuation">.</span>service <span class="token punctuation">[</span>关闭防火墙<span class="token punctuation">]</span> systemctl disable firewall<span class="token punctuation">.</span>service<span class="token punctuation">[</span>永久关闭<span class="token punctuation">,</span>以后开机就不启动这个防火墙<span class="token punctuation">]</span><span class="token number">3</span><span class="token punctuation">.</span>dubbo在ApplicationContext中的配置标签<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">1.1</span> 配置暴露服务的端口号<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>protocol name<span class="token operator">=</span><span class="token string">"dubbo"</span> port<span class="token operator">=</span><span class="token string">"20881"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">1.2</span> 配置应用名称<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>application name<span class="token operator">=</span><span class="token string">"pyg-sellergoods-service"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">1.3</span> 配置ZooKeeper协调分发服务<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>registry address<span class="token operator">=</span><span class="token string">"zookeeper://192.168.25.128:2181"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">1.4</span> 扫描包结构<span class="token punctuation">,</span>完成服务注册<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>annotation <span class="token keyword">package</span><span class="token operator">=</span><span class="token string">"com.itheima.pyg.sellergoods.service.impl"</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">-</span><span class="token operator">></span> 前提<span class="token operator">:</span><span class="token annotation punctuation">@Service</span> <span class="token punctuation">[</span>这个Service是Spring提供给我们还是Dubbo提供给我们的<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token number">1.5</span> 配置超时时间<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>dubbo<span class="token operator">:</span>provider timeout<span class="token operator">=</span><span class="token string">"50000"</span><span class="token operator">/</span><span class="token operator">></span><span class="token number">4</span><span class="token punctuation">.</span>@Reference注解<span class="token punctuation">,</span>调用已经注入到Dubbo中的服务<span class="token punctuation">.</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zookeeper </tag>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE的基础语法</title>
      <link href="/VUE%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/VUE%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h6 id="双向数据绑定demo"><a href="#双向数据绑定demo" class="headerlink" title="双向数据绑定demo"></a>双向数据绑定demo</h6><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset="UTF-8" /&gt;    &lt;title&gt;vue基础笔记&lt;/title&gt;  &lt;script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id="my"&gt;  &lt;!-- &lt;input type="text" v-model="msg"/&gt; --&gt;   &lt;!-- &lt;ul&gt;        &lt;li v-for="(v,i) in arr"&gt;{{v}}==={{i}}&lt;/li&gt;   &lt;/ul&gt; --&gt;   &lt;!-- &lt;button type="" v-on:click="action"&gt;click&lt;/button&gt; --&gt;   &lt;!-- &lt;button type="" v-show="flag"&gt;show&lt;/button&gt; --&gt;   &lt;input type="text" :disabled="value=='a'" v-model="value"/&gt;  &lt;!--input输入a禁用--&gt;   &lt;input type="checkbox" v-model="flag"&gt;{{flag}}  &lt;!--复选框--&gt;   &lt;input type="checkbox" v-model="flagN" value="a"&gt;a   &lt;input type="checkbox" v-model="flagN" value="b"&gt;b   &lt;input type="checkbox" v-model="flagN" value="c"&gt;c   &lt;span&gt;{{flagN}}&lt;/span&gt;   &lt;!--单选框--&gt;    &lt;div&gt;        &lt;input type="radio" name="test" v-model="radioA" value="1"&gt;男         &lt;input type="radio" name="test" v-model="radioA" value="2"&gt;女         &lt;span&gt;{{radioA}}&lt;/span&gt;    &lt;/div&gt;    &lt;!--下拉框--&gt;    &lt;div&gt;        &lt;select v-model="selt"&gt;            &lt;option v-for="item in items" :value="item.value"&gt;{{item.text}}&lt;/option&gt;        &lt;/select&gt;        &lt;span&gt;{{selt}}&lt;/span&gt;    &lt;/div&gt;    &lt;!--修饰符--&gt;    &lt;div&gt;        &lt;input type="text" v-model.trim="msg"/&gt;        &lt;input type="number" v-model.number="num"/&gt;    &lt;/div&gt;&lt;/div&gt;    &lt;script&gt;       window.onload = function(){         new Vue({            el:'#my',       //2.0不允许挂载到html上，body元素上。            data:{                msg:'hello vue',                name:'yuze',                age:22,                flag:true,                arr:['a','b','c'],                flagN:[],                radioA:"1",                obj:{id:1,name:'aaa'},                obj2:[{name:'a1',age:10},{name:'a2',age:30}],                items:[{text:'laoshi',value:'1'},{text:'fsadfa',value:'2'},{text:'fas',value:'3'}],                selt:'2'            },            methods:{            }         });       }    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VUE </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
